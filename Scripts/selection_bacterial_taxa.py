# -*- coding: utf-8 -*-
"""selection bacterial taxa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gk60AGH4BrO4-gBCOi3PDpjUREqHk8QO
"""

# Script: selection bacterial taxa.py
# Description: Reads processed result files obtained from MicrobiomeAnalyst and
#exports bacterial taxa that show statistically significant changes in abundance (P-value)
#have biologically meaningful effect sizes (LDA Scores)
#are relatively abundant in the microbial community (Mean Abundance)
#are consistently present across a relevant proportion of samples (Core Microbiome)

# Load the input files
df_univar = pd.read_csv("univar_test_output.csv")
df_abund = pd.read_csv("taxa_abund.csv")
df_lefse = pd.read_csv("lefse_de_output.csv")
df_core = pd.read_csv("core_microbiome.csv")

# Standardize and rename columns for clarity and consistency
df_univar.rename(columns={df_univar.columns[0]: "Taxon", "P.Value": "P-value"}, inplace=True)
df_abund.rename(columns={df_abund.columns[0]: "Taxon", "Mean" : "Mean Abundance (%)"}, inplace=True)
df_lefse.rename(columns={df_lefse.columns[0]: "Taxon", "LDA": "LDA Score"}, inplace=True)
df_core.rename(columns={df_core.columns[0]: "Taxon", "Prevelance": "Core Microbiome"}, inplace=True)

# Merge all dataframes on 'Taxon'
df_merged = df_univar.merge(df_abund[["Taxon", "Mean Abundance (%)"]], on="Taxon", how="inner")
df_merged = df_merged.merge(df_lefse[["Taxon", "LDAscore"]], on="Taxon", how="inner")
df_merged = df_merged.merge(df_core[["Taxon", "Core Microbiome"]], on="Taxon", how="left")

# Save the final merged table
df_merged.to_csv("bacteria_analysis_summary.csv", index=False)

print("✅ Summary file saved as: bacteria_analysis_summary.csv")

# Load your combined table
df = pd.read_csv("bacteria_analysis_summary.csv")

# Define thresholds
lda_cutoff = 1
pval_cutoff = 0.05
abundance_cutoff = 0.001
core_cutoff = 0.1

# Filter conditions
selected = df[
    (df["LDAscore"] >= lda_cutoff) &
    (df["Pvalues"] <= pval_cutoff) &
    (df["Mean Abundance (%)"] >= abundance_cutoff) &
    (df["Core Microbiome"] >= core_cutoff)
]

# Save outputs
selected.to_csv("selected_taxa.csv", index=False)

# Save excluded taxa
excluded = df[~df["Taxon"].isin(selected["Taxon"])]
excluded.to_csv("excluded_taxa.csv", index=False)

print(f"✅ Selected: {len(selected)} taxa\n❌ Excluded: {len(excluded)} taxa")